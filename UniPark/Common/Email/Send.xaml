<Activity mc:Ignorable="sap sap2010" x:Class="Send" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="dictConfig" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="subject" Type="InArgument(x:String)" />
    <x:Property Name="body" Type="InArgument(x:String)" />
    <x:Property Name="recipient" Type="InArgument(x:String)" />
    <x:Property Name="cc" Type="InArgument(x:String)" />
    <x:Property Name="bcc" Type="InArgument(x:String)" />
    <x:Property Name="attachments" Type="InArgument(scg:IEnumerable(x:String))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1143,1240</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Send_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="21">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="21">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Send" sap:VirtualizedContainerService.HintSize="546,1248" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Int32)" Default="[New Dictionary(Of String, Int32)]" Name="ProtocolType" />
      <Variable x:TypeArguments="x:Int32" Default="1" Name="SMTP" />
      <Variable x:TypeArguments="x:Int32" Default="2" Name="EXCHANGE" />
      <Variable x:TypeArguments="x:Int32" Default="3" Name="OUTLOOK" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:CheckFalse DisplayName="Check False" ErrorMessage="收件人不可为空！" Expression="[String.IsNullOrEmpty(recipient.Trim)]" sap:VirtualizedContainerService.HintSize="504,87" sap2010:WorkflowViewState.IdRef="CheckFalse_1" />
    <ui:CheckFalse DisplayName="Check False" ErrorMessage="邮件标题不可为空！" Expression="[String.IsNullOrEmpty(subject.Trim)]" sap:VirtualizedContainerService.HintSize="504,87" sap2010:WorkflowViewState.IdRef="CheckFalse_2" />
    <ui:CheckFalse DisplayName="Check False" ErrorMessage="邮件正文不可为空！" Expression="[String.IsNullOrEmpty(body.Trim)]" sap:VirtualizedContainerService.HintSize="504,87" sap2010:WorkflowViewState.IdRef="CheckFalse_3" />
    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="504,253" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:Int32">[ProtocolType("SMTP")]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:Int32">[SMTP]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:Int32">[ProtocolType("EXCHANGE")]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:Int32">[EXCHANGE]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:Int32">[ProtocolType("OUTLOOK")]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:Int32">[OUTLOOK]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[recipient]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[recipient.Trim.Replace(",", ";").Trim(";"c)]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[cc]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[if(String.IsNullOrEmpty(cc), "", cc.Trim.Replace(",", ";").Trim(";"c))]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[bcc]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[if(String.IsNullOrEmpty(bcc), "", bcc.Trim.Replace(",", ";").Trim(";"c))]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <Switch x:TypeArguments="x:Int32" DisplayName="Switch" Expression="[ProtocolType(CStr(dictConfig(&quot;EMAIL_PROTOCOL&quot;)).ToUpper)]" sap:VirtualizedContainerService.HintSize="504,482" sap2010:WorkflowViewState.IdRef="Switch`1_1">
      <Switch.Default>
        <Throw Exception="[New ArgumentException(String.Format(&quot;Protocol [{0}] is not found&quot;, dictConfig(&quot;EMAIL_PROTOCOL&quot;).ToString))]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
      </Switch.Default>
      <Sequence x:Key="1" DisplayName="SMTP" sap:VirtualizedContainerService.HintSize="376,243" sap2010:WorkflowViewState.IdRef="Sequence_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:SendMail From="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" TimeoutMS="{x:Null}" AttachmentsCollection="[attachments]" Bcc="[bcc]" Body="[body]" Cc="[cc]" DisplayName="Send SMTP Mail Message" Email="[CStr(dictConfig(&quot;EMAIL_USER&quot;))]" EnableSSL="True" sap:VirtualizedContainerService.HintSize="334,151" sap2010:WorkflowViewState.IdRef="SendMail_1" IsBodyHtml="True" Password="[CStr(dictConfig(&quot;EMAIL_PSWD&quot;))]" Port="[CInt(dictConfig(&quot;EMAIL_PORT&quot;))]" SecureConnection="Auto" Server="[CStr(dictConfig(&quot;EMAIL_HOST&quot;))]" Subject="[subject]" To="[recipient.Replace(&quot;,&quot;, &quot;;&quot;).Trim(&quot;;&quot;c)]">
          <ui:SendMail.Files>
            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
          </ui:SendMail.Files>
        </ui:SendMail>
      </Sequence>
      <Sequence x:Key="2" DisplayName="EXCHANGE" sap:VirtualizedContainerService.HintSize="376,243" sap2010:WorkflowViewState.IdRef="Sequence_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:SendExchangeMail Domain="{x:Null}" EmailAutodiscover="{x:Null}" From="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" TimeoutMS="{x:Null}" AttachmentsCollection="[attachments]" Bcc="[bcc]" Body="[body]" Cc="[cc]" DisplayName="Send Exchange Mail Message" ExchangeVersion="Exchange2007_SP1" sap:VirtualizedContainerService.HintSize="334,151" sap2010:WorkflowViewState.IdRef="SendExchangeMail_1" IsBodyHtml="True" IsDraft="False" Password="[CStr(dictConfig(&quot;EMAIL_PSWD&quot;))]" SaveCopy="True" Server="[CStr(dictConfig(&quot;EMAIL_HOST&quot;))]" Subject="[subject]" To="[recipient]" User="[CStr(dictConfig(&quot;EMAIL_USER&quot;))]" />
      </Sequence>
      <Sequence x:Key="3" DisplayName="OUTLOOK" sap:VirtualizedContainerService.HintSize="376,243" sap2010:WorkflowViewState.IdRef="Sequence_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:SendOutlookMail MailMessage="{x:Null}" TimeoutMS="{x:Null}" Account="[CStr(dictConfig(&quot;EMAIL_USER&quot;))]" AttachmentsCollection="[attachments]" Bcc="[bcc]" Body="[body]" Cc="[cc]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,151" sap2010:WorkflowViewState.IdRef="SendOutlookMail_1" IsBodyHtml="True" IsDraft="False" SentOnBehalfOfName="[CStr(dictConfig(&quot;EMAIL_USER&quot;))]" Subject="[subject]" To="[recipient]">
          <ui:SendOutlookMail.Files>
            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
          </ui:SendOutlookMail.Files>
        </ui:SendOutlookMail>
      </Sequence>
    </Switch>
  </Sequence>
</Activity>